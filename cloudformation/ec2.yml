AWSTemplateFormatVersion: 2010-09-09
Description: This template create a nodejs webapp in EC2 instance and connect with rds

Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: Export VPC Stack Name
        Parameters:
          - ExportVpcStackName
      - 
        Label: 
          default: AG Parameters
        Parameters:
          - InstanceType
          - KeyName
          - AmazonImageID
          

Parameters:
  ExportVpcStackName:
    Description: The name of the vpc stack that exports values
    Type: String

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  AmazonImageID:
    Description: The ID of the Amazon machine image (AMI)
    Type: String

Resources:
  LaunchConfig: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-08fdec01f5df9998f
      SecurityGroups:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-WebServerSecurityGroup
      UserData:
        Fn::Base64:
          !Sub | 
            #!/bin/bash -xe 
            sudo su
            apt update -y >> log.txt
            apt-get install -y  unzip >> log_unzip.txt
            apt-get install -y nodejs >> log_node.txt
            apt install -y npm >>log_npm.txt
            wget https://github.com/s3911417/TaskD/archive/refs/heads/master.zip
            unzip master.zip
            cd TaskD-master
            npm i . >> install_log.txt
            export AWS_ACCESS_KEY_ID=ASIA4PFSTT6DDHRZG3G5
            export AWS_SECRET_ACCESS_KEY=8HbNm3ZwSRVBqXkOwCAkRc0/vM/FPf/ZOHR9fPRe
            npm start

  WebServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: My Auto Scaling Group
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchConfigurationName:
        Ref: LaunchConfig
      MinSize: 1
      MaxSize: 4
      DesiredCapacity: 2
      Tags:
        - Key: Name
          Value: AS-WebServer
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref ALBTargetGroup

  
  WebServerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerAutoScalingGroup
      Cooldown: 60
      ScalingAdjustment: 1

  WebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerAutoScalingGroup
      Cooldown: 60
      ScalingAdjustment: -1

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: TaskDApplicationLoadBalancer
      SecurityGroups:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-ALBSecurityGroup
      Subnets:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet1
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet2
      

  ALBListenerNoSslCertificate:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward 
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP 
  
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,302
      Name: MyWebServers
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: vpc-0b41b5cde5e84c50c
  
  